services:
  messagesrv:
    build:
      context: src/messagesrv
    command: messagesrv
    depends_on:
      - postgres
      - nats
    restart: always
    environment:
      PORT: ${PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NATS_ADDRESS: ${NATS_ADDRESS}

  pushersrv:
    build:
      context: src/pushersrv
    command: pushersrv
    depends_on:
      - nats
    restart: always
    environment:
      PORT: ${PORT}
      NATS_ADDRESS: ${NATS_ADDRESS}

  querysrv:
    build:
      context: src/querysrv
    command: querysrv
    depends_on:
      - postgres
      - nats
      - elasticsearch
    restart: always
    environment:
      PORT: ${PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NATS_ADDRESS: ${NATS_ADDRESS}
      ELASTICSEARCH_ADDRESS: ${ELASTICSEARCH_ADDRESS}

  postgres:
    build:
      context: postgres
    command: -c config_file=/etc/postgresql.conf
    ports:
      - "5532:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ambpguser -d amb-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql.conf

  nats:
    image: nats
    restart: always

  elasticsearch:
    image: elasticsearch:8.17.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  nginx:
    build: ./nginx
    ports:
      - "8080:80"
    depends_on:
      - messagesrv
      - pushersrv
      - querysrv

volumes:
  db-data: